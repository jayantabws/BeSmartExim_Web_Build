{"version":3,"sources":["components/CreateUser.js","components/EditUser.js","pages/users.js"],"names":["users","localStorage","getItem","JSON","parse","initialValues","firstname","lastname","mobile","email","company_name","companyName","download_limit","password","isActive","validateForm","Yup","shape","required","CreateUsers","props","NewInitialValues","Object","assign","download_count","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","setSubscriptionList","useEffect","AxiosMaster","method","url","then","res","data","subscriptionList","catch","err","_jsx","children","className","Formik","validationSchema","onSubmit","values","loaderStart","postData","userid","AxiosUser","stringify","headers","Swal","fire","title","text","icon","isSuccess","UpdateSubscription","subUserCount","OnUserCreate","loaderStop","console","log","errorMsg","_ref","errors","setFieldValue","touched","setFieldError","handleSubmit","isValid","submitForm","_jsxs","Form","Field","name","type","concat","placeholder","autoComplete","onChange","event","target","value","component","onClick","preventDefault","downloadLimit","EditeUser","rowData","id","modalSubmit","withRouter","connect","state","loading","loader","subscriptionId","dataAccess_count","totalWorkspace","dispatch","loadingStart","loadingStop","updateSubscriptionCount","userId","loginUser","userList","setUserList","userListData","setUserListData","_useState5","_useState6","showModal","setShowModal","_useState7","_useState8","showEditModal","setShowEditModal","_useState9","_useState10","setRowdata","getUserList","temp_userList","createdDate","moment","format","temp_userListData","forEach","user","temp_userList_1","push","handleModalClose","_Fragment","e","dangerMode","showCancelButton","confirmButtonColor","cancelButtonColor","isConfirm","userData","filter","contact","toLowerCase","includes","searchUser","length","map","index","isConfirmed","handleEditModal","colSpan","style","textAlign","Modal","bssize","show","onHide","Header","closeButton","Title","Body","height","overflow","scrollbarWidth","AddUser","params","EditUser"],"mappings":"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","file":"static/js/7.cfa73d18.chunk.js","sourcesContent":["import React, { Component,useState, useRef, useCallback, useEffect, Fragment } from 'react'\r\nimport { Row, Col, Modal, Button, FormGroup, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport Select from 'react-select'\r\nimport AxiosMaster from '../shared/AxiosMaster';\r\nimport AxiosUser from \"../shared/AxiosUser\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Swal from 'sweetalert2';\r\n\r\nconst users = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null ;\r\n\r\nconst initialValues = {\r\n  firstname: \"\",\r\n  lastname: \"\",\r\n  mobile: \"\",\r\n  email: \"\",\r\n  company_name: users.companyName,\r\n  download_limit: 0,\r\n  password: \"\",\r\n  isActive: \"\"\r\n};\r\n\r\nconst validateForm = Yup.object().shape({\r\n  firstname: Yup.string().required(\"Please enter first name\"),\r\n  lastname: Yup.string().required(\"Please enter last name\"),\r\n  email: Yup.string().email().required(\"Please enter valid email address\"),\r\n  mobile: Yup.string().required(\"Please enter valid mobile no\"),\r\n  company_name: Yup.string().required(\"This field is required\"),\r\n  download_limit: Yup.string().required(\"This field is required\"),\r\n  password: Yup.string().required(\"This field is required\"),\r\n  isActive: Yup.string().required(\"This field is required\")\r\n});\r\n\r\n\r\nconst CreateUsers = (props) => {\r\n\r\n  const NewInitialValues =  Object.assign(initialValues,{download_limit : props.download_count})\r\n  const [userList, setUserList] = useState([]);\r\n  const [subscriptionList, setSubscriptionList] = useState([]);\r\n\r\n  const handleSubmit = (values) => {\r\n    props.loaderStart()\r\n      const postData = {\r\n        \"firstname\": values.firstname,\r\n        \"lastname\": values.lastname,\r\n        \"email\": values.email,\r\n        \"mobile\": values.mobile,\r\n        \"companyName\": values.company_name,\r\n        \"downloadLimit\": values.download_limit,\r\n        \"userType\": \"USER\",\r\n        \"password\": values.password,\r\n        \"isActive\": values.isActive,\r\n        \"uplineId\": users.userid\r\n      }\r\n\r\n      if(values.download_limit <= props.download_count) {\r\n      AxiosUser({\r\n        method: \"POST\",\r\n        url: `user-management/user`,\r\n        data: JSON.stringify(postData),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      })\r\n        .then(res => {\r\n          Swal.fire({\r\n            title: 'Thank You',\r\n            text: \"User created successfully\",\r\n            icon: 'success',\r\n          }).then((isSuccess) => {\r\n            if(isSuccess){       \r\n              //props.UpdateSubscription({\"subUserCount\" : props.subUserCount -1, \"downloadLimit\": props.download_count - values.download_limit})\r\n              props.UpdateSubscription({\"subUserCount\" : props.subUserCount -1})\r\n              props.OnUserCreate()\r\n              props.loaderStop()\r\n            }\r\n          });\r\n        })\r\n        .catch(err => {\r\n          console.log(\"Err\", err);\r\n          let errorMsg = \"Somethhing went wrong, please try again.\"\r\n          if (err.data.errorMsg) {\r\n            errorMsg = err.data.errorMsg;\r\n          }\r\n          Swal.fire({\r\n            title: 'Oops!',\r\n            text: errorMsg,\r\n            icon: 'error',\r\n          })\r\n        });\r\n      }\r\n      else {\r\n        Swal.fire({\r\n              title: 'Oops!',\r\n              text: \"Download Limit should be less than total limit\",\r\n              icon: 'error',\r\n            })\r\n      }\r\n\r\n  }\r\n\r\n  const getSubscriptionList = () => {\r\n\r\n    AxiosMaster({\r\n      method: \"GET\",\r\n      url: `masterdata-management/subscription/list`,    \r\n    })\r\n      .then(res => {\r\n        setSubscriptionList(res.data.subscriptionList)\r\n      })\r\n      .catch(err => {\r\n        setSubscriptionList([])\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSubscriptionList()\r\n  },[])\r\n\r\n\r\n    return (\r\n      <div> \r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 grid-margin stretch-card\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"table-responsive\">\r\n\r\n                <Formik\r\n                  initialValues={NewInitialValues}\r\n                  validationSchema={validateForm}\r\n                  onSubmit={handleSubmit}\r\n                >\r\n                  {({ values, errors, setFieldValue, setFieldError, touched, isValid, handleSubmit, submitForm }) => {\r\n                    return (\r\n                      <Form >\r\n                        \r\n                        <div className=\"form-group\">\r\n                          <label><b>First Name</b></label>\r\n                          <Field\r\n                            name=\"firstname\"\r\n                            type=\"text\"\r\n                            className={`form-control ${touched.firstname && errors.firstname ? \"is-invalid\" : \"\"}`}\r\n                            placeholder=\"First Name\"\r\n                            autoComplete='off'\r\n                            onChange={event => {\r\n                              setFieldValue(\"firstname\", event.target.value);\r\n                            }}\r\n                          />\r\n                          {touched.firstname && errors.firstname && (<p className=\"error\">{errors.firstname}</p>)}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <label><b>Last Name</b></label>\r\n                          <Field\r\n                            name=\"lastname\"\r\n                            type=\"text\"\r\n                            className={`form-control ${touched.lastname && errors.lastname ? \"is-invalid\" : \"\"}`}\r\n                            placeholder=\"Last Name\"\r\n                            autoComplete='off'\r\n                            onChange={event => {\r\n                              setFieldValue(\"lastname\", event.target.value);\r\n                            }}\r\n                          />\r\n                          {touched.lastname && errors.lastname && (<p className=\"error\">{errors.lastname}</p>)}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <label><b>Email</b></label>\r\n                          <Field\r\n                            name=\"email\"\r\n                            type=\"text\"\r\n                            className={`form-control ${touched.email && errors.email ? \"is-invalid\" : \"\"}`}\r\n                            placeholder=\"Email Address\"\r\n                            autoComplete='off'\r\n                            onChange={event => {\r\n                              setFieldValue(\"email\", event.target.value);\r\n                            }}\r\n                          />\r\n                          {touched.email && errors.email && (<p className=\"error\">{errors.email}</p>)}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <label><b>Mobile</b></label>\r\n                          <Field\r\n                            name=\"mobile\"\r\n                            type=\"text\"\r\n                            className={`form-control ${touched.mobile && errors.mobile ? \"is-invalid\" : \"\"}`}\r\n                            placeholder=\"Mobile No\"\r\n                            autoComplete='off'\r\n                            onChange={event => {\r\n                              setFieldValue(\"mobile\", event.target.value);\r\n                            }}\r\n                          />\r\n                          {touched.mobile && errors.mobile && (<p className=\"error\">{errors.mobile}</p>)}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <label><b>Password</b></label>\r\n                          <Field\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            className={`form-control ${touched.password && errors.password ? \"is-invalid\" : \"\"}`}\r\n                            placeholder=\"Password\"\r\n                            autoComplete='off'\r\n                            onChange={event => {\r\n                              setFieldValue(\"password\", event.target.value);\r\n                            }}\r\n                          />\r\n                          {touched.password && errors.password && (<p className=\"error\">{errors.password}</p>)}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <label><b>Company Name</b></label>\r\n                          <Field\r\n                            name=\"company_name\"\r\n                            type=\"text\"\r\n                            className={`form-control ${touched.company_name && errors.company_name ? \"is-invalid\" : \"\"}`}\r\n                            placeholder=\"Company Name\"\r\n                            autoComplete='off'\r\n                            onChange={event => {\r\n                              setFieldValue(\"company_name\", event.target.value);\r\n                            }}\r\n                          />\r\n                          {touched.company_name && errors.company_name && (<p className=\"error\">{errors.company_name}</p>)}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <label><b>Assigned Download Limit</b></label>\r\n                          <Field\r\n                            name=\"download_limit\"\r\n                            type=\"text\"\r\n                            className={`form-control ${touched.download_limit && errors.download_limit ? \"is-invalid\" : \"\"}`}\r\n                            placeholder=\"Download Limit\"\r\n                            autoComplete='off'\r\n                            onChange={event => {\r\n                              setFieldValue(\"download_limit\", event.target.value);\r\n                            }}\r\n                          />\r\n                          {touched.download_limit && errors.download_limit && (<p className=\"error\">{errors.download_limit}</p>)}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <label><b>Status</b></label>\r\n                          <Field\r\n                            name=\"isActive\"\r\n                            component=\"select\"\r\n                            className={`form-control ${touched.isActive && errors.isActive ? \"is-invalid\" : \"\"}`}\r\n                            autoComplete=\"off\"      \r\n                            onChange={event => {\r\n                              setFieldValue(\"isActive\", event.target.value);\r\n                            }}\r\n                          >\r\n                                <option value=\"\" >Please Select</option>\r\n                                <option value=\"Y\" >ACTIVE</option>\r\n                                <option value=\"N\" >IN-ACTIVE</option>\r\n                               \r\n                            {touched.isActive && errors.isActive && (<p className=\"error\">{errors.isActive}</p>)}\r\n                          </Field>   \r\n                        </div>\r\n                       \r\n                        <button type=\"submit\" onClick={(event) => {\r\n                          event.preventDefault();\r\n                          handleSubmit();\r\n                        }} className=\"btn btn-primary\">Create Account</button>\r\n                      </Form>\r\n                    )\r\n                  }\r\n                  }\r\n                </Formik>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n         \r\n        </div>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CreateUsers\r\n","import React, { Component,useState, useRef, useCallback, useEffect, Fragment } from 'react'\r\nimport { Row, Col, Modal, Button, FormGroup, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport Select from 'react-select'\r\nimport AxiosMaster from '../shared/AxiosMaster';\r\nimport AxiosUser from \"../shared/AxiosUser\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nconst validateForm = Yup.object().shape({\r\n  firstname: Yup.string().required(\"Please enter first name\"),\r\n  lastname: Yup.string().required(\"Please enter last name\"),\r\n  email: Yup.string().email().required(\"Please enter valid email address\"),\r\n  mobile: Yup.string().required(\"Please enter valid mobile no\"),\r\n  companyName: Yup.string().required(\"This field is required\"),\r\n  downloadLimit: Yup.string().required(\"This field is required\"),\r\n  isActive: Yup.string().required(\"This field is required\"),\r\n  password: Yup.string().required(\"This field is required\"),\r\n});\r\n\r\n\r\nconst EditeUser = (props) => {\r\n\r\n\r\n  const initialValues = {\r\n    firstname: props.rowData.firstname,\r\n    lastname: props.rowData.lastname,\r\n    mobile: props.rowData.mobile,\r\n    email: props.rowData.email,\r\n    companyName: props.rowData.companyName,\r\n    downloadLimit: props.download_count,\r\n    isActive: props.rowData.isActive,\r\n    password: props.rowData.password\r\n  };\r\n  \r\n\r\n  const [userList, setUserList] = useState([]);\r\n\r\n  const handleSubmit = (values) => {\r\n      const postData = {\r\n        \"firstname\": values.firstname,\r\n        \"lastname\": values.lastname,\r\n        \"email\": values.email,\r\n        \"mobile\": values.mobile,\r\n        \"companyName\": values.companyName,\r\n        \"downloadLimit\": values.downloadLimit,\r\n        \"isActive\": values.isActive,\r\n        \"password\": values.password\r\n      }\r\nconsole.log(\"Props ==== \", props)\r\n      if(values.downloadLimit <= props.download_count) {\r\n\r\n        AxiosUser({\r\n          method: \"PUT\",\r\n          url: `user-management/user/${props.rowData.id}`,\r\n          data: JSON.stringify(postData),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        })\r\n          .then(res => {\r\n            console.log(\"user\", res.data);\r\n            Swal.fire({\r\n              title: 'Thank You',\r\n              text: \"User update is successful\",\r\n              icon: 'success',\r\n            }).then(() => {props.modalSubmit()});\r\n          })\r\n          .catch(err => {\r\n            console.log(\"Err\", err);\r\n            let errorMsg = \"Somethhing went wrong, please try again.\"\r\n            if (err.data.errorMsg) {\r\n              errorMsg = err.data.errorMsg;\r\n            }\r\n            Swal.fire({\r\n              title: 'Oops!',\r\n              text: errorMsg,\r\n              icon: 'error',\r\n            })\r\n          });\r\n\r\n      }\r\n      else {\r\n        Swal.fire({\r\n              title: 'Oops!',\r\n              text: \"Download Limit should be less than total limit\",\r\n              icon: 'error',\r\n            })\r\n      }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n\r\n  },[])\r\n\r\n\r\n    return (\r\n      <div>\r\n        \r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validateForm}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            {({ values, errors, setFieldValue, setFieldError, touched, isValid, handleSubmit, submitForm }) => {        \r\n              return (\r\n                <Form >\r\n                  <div className=\"form-group\">\r\n                    <label><b>First Name</b></label>\r\n                    <Field\r\n                      name=\"firstname\"\r\n                      type=\"text\"\r\n                      className={`form-control ${touched.firstname && errors.firstname ? \"is-invalid\" : \"\"}`}\r\n                      placeholder=\"First Name\"\r\n                      onChange={event => {\r\n                        setFieldValue(\"firstname\", event.target.value);\r\n                      }}\r\n                    />\r\n                    {touched.firstname && errors.firstname && (<p className=\"error\">{errors.firstname}</p>)}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                  <label><b>Last Name</b></label>\r\n                    <Field\r\n                      name=\"lastname\"\r\n                      type=\"text\"\r\n                      className={`form-control ${touched.lastname && errors.lastname ? \"is-invalid\" : \"\"}`}\r\n                      placeholder=\"Last Name\"\r\n                      onChange={event => {\r\n                        setFieldValue(\"lastname\", event.target.value);\r\n                      }}\r\n                    />\r\n                    {touched.lastname && errors.lastname && (<p className=\"error\">{errors.lastname}</p>)}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                  <label><b>Email</b></label>\r\n                    <Field\r\n                      name=\"email\"\r\n                      type=\"text\"\r\n                      className={`form-control ${touched.email && errors.email ? \"is-invalid\" : \"\"}`}\r\n                      placeholder=\"Email Address\"\r\n                      onChange={event => {\r\n                        setFieldValue(\"email\", event.target.value);\r\n                      }}\r\n                    />\r\n                    {touched.email && errors.email && (<p className=\"error\">{errors.email}</p>)}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                  <label><b>Mobile</b></label>\r\n                    <Field\r\n                      name=\"mobile\"\r\n                      type=\"text\"\r\n                      className={`form-control ${touched.mobile && errors.mobile ? \"is-invalid\" : \"\"}`}\r\n                      placeholder=\"Mobile No\"\r\n                      onChange={event => {\r\n                        setFieldValue(\"mobile\", event.target.value);\r\n                      }}\r\n                    />\r\n                    {touched.mobile && errors.mobile && (<p className=\"error\">{errors.mobile}</p>)}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                      <label><b>Password</b></label>\r\n                        <Field\r\n                          name=\"password\"\r\n                          type=\"password\"\r\n                          className={`form-control ${touched.password && errors.password ? \"is-invalid\" : \"\"}`}\r\n                          placeholder=\"Password\"\r\n                          onChange={event => {\r\n                            setFieldValue(\"password\", event.target.value);\r\n                          }}\r\n                        />\r\n                        {touched.password && errors.password && (<p className=\"error\">{errors.password}</p>)}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                  <label><b>Company Name</b></label>\r\n                    <Field\r\n                      name=\"companyName\"\r\n                      type=\"text\"\r\n                      className={`form-control ${touched.companyName && errors.companyName ? \"is-invalid\" : \"\"}`}\r\n                      placeholder=\"Company Name\"\r\n                      onChange={event => {\r\n                        setFieldValue(\"companyName\", event.target.value);\r\n                      }}\r\n                    />\r\n                    {touched.companyName && errors.companyName && (<p className=\"error\">{errors.companyName}</p>)}\r\n                  </div> \r\n                  <div className=\"form-group\">\r\n                  <label><b>Assigned Download Limit</b></label>\r\n                    <Field\r\n                      name=\"downloadLimit\"\r\n                      type=\"text\"\r\n                      className={`form-control ${touched.downloadLimit && errors.downloadLimit ? \"is-invalid\" : \"\"}`}\r\n                      placeholder=\"Download Limit\"\r\n                      onChange={event => {\r\n                        setFieldValue(\"downloadLimit\", event.target.value);\r\n                      }}\r\n                    />\r\n                    {touched.downloadLimit && errors.downloadLimit && (<p className=\"error\">{errors.downloadLimit}</p>)}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                  <label><b>Status</b></label>\r\n                    <Field\r\n                      name=\"isActive\"\r\n                      component=\"select\"\r\n                      className={`form-control ${touched.isActive && errors.isActive ? \"is-invalid\" : \"\"}`}\r\n                      autoComplete=\"off\"      \r\n                      onChange={event => {\r\n                        setFieldValue(\"isActive\", event.target.value);\r\n                      }}\r\n                    >    \r\n                      <option value= \"\" >Please Select</option>\r\n                      <option value= \"Y\" >Active</option>\r\n                      <option value= \"N\" >Inactive</option>\r\n                      {touched.isActive && errors.isActive && (<p className=\"error\">{errors.isActive}</p>)}\r\n                    </Field>   \r\n                  </div>\r\n                  \r\n                  <button type=\"submit\"  className=\"btn btn-primary\">Update User</button>\r\n                </Form>\r\n              )\r\n            }\r\n            }\r\n          </Formik>\r\n\r\n               \r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default EditeUser\r\n","import React, { useEffect, useState } from 'react';\r\nimport AxiosUser from \"../shared/AxiosUser\";\r\nimport moment from 'moment';\r\nimport AddUser from '../components/CreateUser';\r\nimport EditUser from '../components/EditUser';\r\nimport { Dropdown, DropdownButton, Modal,  OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { loaderStart, loaderStop } from \"../store/actions/loader\";\r\nimport {updateSubscriptionCount} from \"../store/actions/data\"\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n function Users(props) {\r\n\r\n  const userId = localStorage.getItem(\"userToken\");\r\n  const loginUser = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null;\r\n\r\n  const [userList, setUserList] = useState([]);\r\n  const [userListData, setUserListData] = useState([]);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [rowData, setRowdata] = useState(false);\r\n\r\n  const getUserList = () => {\r\n    props.loadingStart()\r\n    let temp_userList = [{\r\n        \"firstname\" : loginUser.firstname,\r\n        \"lastname\" : loginUser.lastname,\r\n        \"email\" : loginUser.email,\r\n        \"mobile\" : loginUser.mobile,\r\n        \"isActive\" : loginUser.isActive ,\r\n        \"createdDate\" : loginUser.createdDate ? moment(loginUser.createdDate).format(\"YYYY-MM-DD\") : null,\r\n        \"id\" :  loginUser.userid\r\n    }]\r\n    let temp_userListData = [{\r\n        \"firstname\" : loginUser.firstname,\r\n        \"lastname\" : loginUser.lastname,\r\n        \"email\" : loginUser.email,\r\n        \"mobile\" : loginUser.mobile,\r\n        \"isActive\" : loginUser.isActive ,\r\n        \"createdDate\" : loginUser.createdDate ? moment(loginUser.createdDate).format(\"YYYY-MM-DD\") : null,\r\n        \"password\" : loginUser.password,\r\n        \"companyName\": loginUser.companyName,\r\n        \"id\" :  loginUser.userid\r\n        \r\n    }]\r\n\r\n    AxiosUser({\r\n      method: \"GET\",\r\n      url: `user-management/user/list?uplineId=${userId}`\r\n    })\r\n      .then(res => {       \r\n\r\n        res.data.userList.forEach(user => {\r\n          let temp_userList_1 = {\r\n            \"firstname\" : user.firstname,\r\n            \"lastname\" : user.lastname,\r\n            \"email\" : user.email,\r\n            \"mobile\" : user.mobile,\r\n            \"isActive\" : user.isActive,\r\n            \"createdDate\" : user.createdDate ? moment(user.createdDate).format(\"YYYY-MM-DD\") : null,\r\n            \"password\" : user.password,\r\n            \"companyName\": user.companyName,\r\n            \"downloadLimit\": user.downloadLimit,\r\n            \"id\" :  user.id\r\n          }\r\n          temp_userList.push(temp_userList_1)\r\n          temp_userListData.push(temp_userList_1)\r\n\r\n        });\r\n        setUserList(temp_userList)\r\n        setUserListData(temp_userListData)\r\n\r\n        props.loadingStop()\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Err\", err);\r\n        props.loadingStop()\r\n      });\r\n  }\r\n\r\n  const handleModal = ()  => {\r\n    if(props.subUserCount > 0 ){\r\n      Swal.fire({\r\n        title: 'Create User !',\r\n        text: `Available Limit ${props.subUserCount}. \\n Are you sure you want to Create New User ?`,\r\n        icon: 'warning',\r\n        dangerMode: true,\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        }).then((isConfirm)=> {\r\n          if(isConfirm.value){\r\n            setShowModal(true)\r\n          }})\r\n    }\r\n    else {\r\n      Swal.fire({\r\n        title: 'Create User !',\r\n        text: \"Your User Limit Exhausted\",\r\n        icon: 'error',\r\n        dangerMode: true,\r\n        confirmButtonColor: '#3085d6',\r\n      }).then((isConfirm)=> {})\r\n    }\r\n   \r\n  }\r\n\r\n  const UpdateSubscription = (params) => {\r\n\r\n    AxiosUser({\r\n      method: \"PUT\",\r\n      url: `user-management/user-subscription/update/${props.subscriptionId}`,\r\n      data: JSON.stringify(params),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(res => {\r\n        // props.updateSubscriptionCount({\r\n        //   download_count: params.downloadLimit,\r\n        //   subscriptionId: props.subscriptionId,\r\n        //   dataAccess_count: props.dataAccess_count,\r\n        //   totalWorkspace: props.totalWorkspace,\r\n        //   subUserCount: props.subUserCount - 1\r\n        // })\r\n\r\n        props.updateSubscriptionCount({\r\n          download_count: props.download_count,\r\n          subscriptionId: props.subscriptionId,\r\n          dataAccess_count: props.dataAccess_count,\r\n          totalWorkspace: props.totalWorkspace,\r\n          subUserCount: props.subUserCount - 1\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Err\", err);\r\n        let errorMsg = \"Somethhing went wrong, please try again.\"\r\n      });\r\n\r\n}\r\n\r\n  const OnUserCreate = () => {\r\n    handleModalClose()\r\n    getUserList()\r\n  }\r\n\r\n  const handleModalClose = ()  => {\r\n    setShowModal(false)\r\n  }\r\n  const modalSubmit = (e) => {\r\n    setShowModal(false)\r\n    setShowEditModal(false)\r\n    getUserList()\r\n  }\r\n\r\n  const handleEditModal = (rowData)  => {\r\n    setShowEditModal(true)\r\n    setRowdata(rowData)\r\n  }\r\n\r\n  const handleEditModalClose = ()  => {\r\n    setShowEditModal(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUserList();\r\n  }, []);\r\n\r\n  const searchUser = (text) => {\r\n    console.log(\"text\", text)\r\n    let userData = userList.filter((contact) => contact.firstname.toLowerCase().includes(text.toLowerCase()) ||\r\n                                                contact.lastname.toLowerCase().includes(text.toLowerCase()) );\r\n    setUserListData(userData);\r\n  }\r\n\r\n  const deleteUser = (id) => {\r\n    Swal.fire({\r\n      title: 'Remove',\r\n      text: \" Are you sure you want to Remove the user?\",\r\n      icon: 'warning',\r\n      dangerMode: true,\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n    }).then((isConfirm)=> {\r\n\r\n      if(isConfirm.isConfirmed){\r\n        const postData = {\r\n          \"isDelete\": \"Y\"\r\n        }\r\n        AxiosUser({\r\n          method: \"PUT\",\r\n          url: `user-management/deleteuser/${id}`,\r\n          data: JSON.stringify(postData),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        })\r\n        .then(res => {\r\n          Swal.fire({\r\n            title: 'Remove',\r\n            text: \" User removed successfully\",\r\n            icon: 'success',\r\n          }).then(getUserList())\r\n        })\r\n        .catch(err => {\r\n          console.log(\"Err\", err);\r\n        });\r\n      }\r\n    })\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 list-page mt-3\">\r\n          \r\n\r\n            <div className=\"search-ar mt-2 mb-2\">\r\n              <h2 className=\"headl\">Users</h2>\r\n              &nbsp;&nbsp;<button onClick={(e) => { handleModal(e.target.value) } }>Add User</button>\r\n              <div className=\"wrap float-right\">\r\n                <div className=\"search\">\r\n                  <input type=\"text\" onChange={(e) => { searchUser(e.target.value) }} className=\"searchTerm\" placeholder=\"What are you looking for?\" />\r\n                  <button type=\"submit\" className=\"searchButton\">\r\n                    <i className=\"icon ion-md-search\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <table className=\"table table-striped table-hover\">\r\n              <thead className=\"\">\r\n                <tr>\r\n                  <th>SL No.</th>\r\n                  <th>Firstname</th>\r\n                  <th>Last Name</th>\r\n                  <th>Company Name</th>\r\n                  <th>Email Id</th>\r\n                  <th>Mobile</th>\r\n                  <th>Available Download Limit</th>\r\n                  <th>Status</th>\r\n                  <th>Created On</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  userListData.length > 0 ? (\r\n                    userListData.map((user, index) => {   \r\n                      return (\r\n                        <tr key={index}>\r\n                          <td>{index + 1}.</td>\r\n                          <td>{user.firstname}</td>\r\n                          <td>{user.lastname ? user.lastname : ''}</td>\r\n                          <td>{user.companyName ? user.companyName : ''}</td>\r\n                          <td>{user.email ? user.email : ''}</td>\r\n                          <td>{user.mobile ? user.mobile : ''}</td>\r\n                          <td>{user.downloadLimit ? user.downloadLimit : ''}</td>\r\n                          <td>{user.isActive && user.isActive == \"Y\" ? \"Active\" : \"Inactive\" }</td>\r\n                          <td>{user.createdDate ? user.createdDate : ''}</td>\r\n                           <td>{index >= 1 ? <button className=\"btn btn-primary btn-sm\" onClick ={() => {deleteUser(user.id)}}><i className=\"icon ion-ios-trash\"></i></button> : null} &nbsp;\r\n                          <button className=\"btn btn-primary btn-sm\" onClick ={() => {handleEditModal(user)}} ><i className=\"fa fa-pencil\"></i></button></td>\r\n                        </tr>\r\n                      )\r\n\r\n                    })\r\n                  ) : (<tr><td colSpan=\"7\" style={{ textAlign: \"center\" }}>No record found</td></tr>)\r\n                }\r\n              </tbody>\r\n            </table>\r\n\r\n          </div>\r\n        </div>\r\n        <div>\r\n            { showModal ? \r\n            <Modal className=\"\" bssize=\"md\"\r\n                show={showModal}\r\n                onHide={handleModalClose} \r\n                >             \r\n                <Modal.Header closeButton > Create User </Modal.Header>\r\n                <Modal.Title >  </Modal.Title>\r\n\r\n                    <Modal.Body style= {{ height: '80vh', overflow : 'auto', scrollbarWidth : '10px' } }>\r\n                    <div>\r\n                    <AddUser  \r\n                      UpdateSubscription = {UpdateSubscription}\r\n                      OnUserCreate = {OnUserCreate}\r\n                      subUserCount= {props.subUserCount}\r\n                      download_count = {props.download_count}\r\n                      subscriptionId = {props.subscriptionId}\r\n                      loaderStart = {props.loadingStart}\r\n                      loaderStop = {props.loadingStop}\r\n                    />\r\n                    </div>\r\n                    </Modal.Body>\r\n                        \r\n              </Modal>\r\n            : null}\r\n        </div>\r\n\r\n        <div>\r\n            { showEditModal ? \r\n            <Modal className=\"\" bssize=\"md\"\r\n                show={showEditModal}\r\n                onHide={handleEditModalClose} \r\n                >             \r\n                <Modal.Header closeButton > Edit User </Modal.Header>\r\n                <Modal.Title >  </Modal.Title>\r\n\r\n                    <Modal.Body style= {{ height: '80vh', overflow : 'auto', scrollbarWidth : '10px' } }>\r\n                    <div>\r\n                    <EditUser  \r\n                      rowData = {rowData}\r\n                      download_count = {props.download_count}\r\n                      modalSubmit = {modalSubmit}\r\n                    />\r\n                    </div>\r\n                    </Modal.Body>\r\n                        \r\n              </Modal>\r\n            : null}\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.loader.loading,\r\n    download_count: state.data.download_count,\r\n    subscriptionId: state.data.subscriptionId,\r\n    dataAccess_count: state.data.dataAccess_count,\r\n    totalWorkspace: state.data.totalWorkspace,\r\n    subUserCount: state.data.subUserCount\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    loadingStart: () => dispatch(loaderStart()),\r\n    loadingStop: () => dispatch(loaderStop()),\r\n    updateSubscriptionCount: (data) => dispatch(updateSubscriptionCount(data)), \r\n  };\r\n};\r\nexport default withRouter (connect( mapStateToProps, mapDispatchToProps)(Users));"],"sourceRoot":""}