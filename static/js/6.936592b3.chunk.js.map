{"version":3,"sources":["components/ViewSubscription.js","pages/subscriptions.js"],"names":["ViewSubscription","props","_useState","useState","_useState2","_slicedToArray","subscriptionDetails","setSubscriptionDetails","useEffect","subscriptionId","rowData","AxiosMaster","method","url","concat","then","res","data","catch","err","getSubscriptionDetails","_jsx","children","_jsxs","class","downloadLimit","subUserCount","workspaceLimit","totalWorkspace","dataAccess","dataAccessInMonth","searchQueryPerDay","queryPerDay","colSpan","moment","createdDate","format","accountExpireDate","Markets","userId","localStorage","getItem","loading","isLoading","_useState3","_useState4","subscriptionList","setSubscriptionList","_useState5","_useState6","subscriptionListData","setSubscriptionListData","_useState7","_useState8","showModal","setShowModal","_useState9","_useState10","setRowData","AxiosUser","userSubscriptionList","console","log","_Fragment","className","type","onChange","e","text","subscriptionData","filter","subscription","name","toLowerCase","includes","userSubscription","target","value","placeholder","length","map","index","validityInDay","isActive","style","color","fontWeight","onClick","UserSubscriptionDetails","textAlign","Modal","bsSize","show","onHide","Header","closeButton","Body","isAdmin"],"mappings":"2MA0FeA,EArFU,SAACC,GAExB,IAAAC,EAAsDC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA3DI,EAAmBF,EAAA,GAAEG,EAAsBH,EAAA,GAuBhD,OALFI,qBAAU,YAhBqB,WAC7B,IAAIC,EAAiBR,EAAMS,QAAQD,eAEnCE,YAAY,CACVC,OAAQ,MACRC,IAAI,sCAADC,OAAwCL,KAE1CM,MAAK,SAAAC,GACJT,EAAuBS,EAAIC,KAC7B,IACCC,OAAM,SAAAC,GACLZ,EAAuB,GACzB,GACJ,CAIEa,EACF,GAAE,IAIEC,cAAA,OAAAC,SACIC,eAAA,SAAOC,MAAM,kCAAiCF,SAAA,CAE1CD,cAAA,SAAAC,SACAC,eAAA,MAAAD,SAAA,CACED,cAAA,MAAAC,SAAI,cACJD,cAAA,MAAAC,SAAI,aACJD,cAAA,MAAAC,SAAI,mBAGNC,eAAA,SAAAD,SAAA,CACAC,eAAA,MAAAD,SAAA,CACED,cAAA,MAAAC,SAAI,yBACJD,cAAA,MAAAC,SAAKhB,GAAuBA,EAAoBmB,gBAChDJ,cAAA,MAAAC,SAAKrB,EAAMS,QAAQe,mBAErBF,eAAA,MAAAD,SAAA,CACED,cAAA,MAAAC,SAAI,mBACJD,cAAA,MAAAC,SAAKhB,GAAuBA,EAAoBoB,eAChDL,cAAA,MAAAC,SAAKrB,EAAMS,QAAQgB,kBAErBH,eAAA,MAAAD,SAAA,CACED,cAAA,MAAAC,SAAI,oBACJD,cAAA,MAAAC,SAAKhB,GAAuBA,EAAoBqB,iBAChDN,cAAA,MAAAC,SAAKrB,EAAMS,QAAQkB,oBASrBL,eAAA,MAAAD,SAAA,CACED,cAAA,MAAAC,SAAI,wBACJD,cAAA,MAAAC,SAAKhB,GAAuBA,EAAoBuB,aAChDR,cAAA,MAAAC,SAAKrB,EAAMS,QAAQoB,uBAErBP,eAAA,MAAAD,SAAA,CACED,cAAA,MAAAC,SAAI,yBACJD,cAAA,MAAAC,SAAKhB,GAAuBA,EAAoByB,oBAChDV,cAAA,MAAAC,SAAKrB,EAAMS,QAAQsB,iBAErBT,eAAA,MAAAD,SAAA,CACED,cAAA,MAAAC,SAAI,qBACJD,cAAA,MAAIY,QAAS,EAAEX,SAAEY,IAAOjC,EAAMS,QAAQyB,aAAaC,OAAO,mBAE5Db,eAAA,MAAAD,SAAA,CACED,cAAA,MAAAC,SAAI,qBACJD,cAAA,MAAIY,QAAS,EAAEX,SAAEY,IAAOjC,EAAMS,QAAQ2B,mBAAmBD,OAAO,0BAQhF,E,SClFe,SAASE,IAEtB,IAAMC,EAASC,aAAaC,QAAQ,aAEpCvC,EAA6BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAArCwC,EAAOtC,EAAA,GAAEuC,EAASvC,EAAA,GACzBwC,EAAgDzC,mBAAS,IAAG0C,EAAAxC,YAAAuC,EAAA,GAArDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAC5CG,EAAwD7C,mBAAS,IAAG8C,EAAA5C,YAAA2C,EAAA,GAA7DE,EAAoBD,EAAA,GAAEE,EAAuBF,EAAA,GACpDG,EAAkCjD,oBAAS,GAAMkD,EAAAhD,YAAA+C,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAA8BrD,mBAAS,IAAGsD,EAAApD,YAAAmD,EAAA,GAAnC9C,EAAO+C,EAAA,GAAEC,EAAUD,EAAA,GAoB1BjD,qBAAU,WAfRmD,YAAU,CACR/C,OAAQ,MACRC,IAAI,iDAADC,OAAmDyB,KAErDxB,MAAK,SAAAC,GACJ+B,EAAoB/B,EAAIC,KAAK2C,sBAC7BT,EAAwBnC,EAAIC,KAAK2C,sBACjCjB,GAAU,EACZ,IACCzB,OAAM,SAAAC,GACL0C,QAAQC,IAAI,MAAO3C,GACnBwB,GAAU,EACZ,GAKJ,GAAG,IAiBH,OACEpB,eAAAwC,WAAA,CAAAzC,SAAA,CACED,cAAA,OAAK2C,UAAU,kBAAiB1C,SAE9BD,cAAA,OAAK2C,UAAU,MAAK1C,SAClBC,eAAA,OAAKyC,UAAU,2BAA0B1C,SAAA,CAGvCC,eAAA,OAAKyC,UAAU,sBAAqB1C,SAAA,CAClCD,cAAA,MAAI2C,UAAU,QAAO1C,SAAC,kBACtBD,cAAA,OAAK2C,UAAU,mBAAkB1C,SAC/BC,eAAA,OAAKyC,UAAU,SAAQ1C,SAAA,CACrBD,cAAA,SAAO4C,KAAK,OAAOC,SAAU,SAACC,IA3BrB,SAACC,GACxBP,QAAQC,IAAI,OAAQM,GACpB,IAAIC,EAAmBvB,EAAiBwB,QAAO,SAACC,GAAY,OAAKA,EAAaC,KAAKC,cAAcC,SAASN,EAAKK,cAAc,IAC7HtB,EAAwBkB,EAC1B,CAuBsDM,CAAiBR,EAAES,OAAOC,MAAO,EAAGb,UAAU,aAAac,YAAY,8BAC7GzD,cAAA,UAAQ4C,KAAK,SAASD,UAAU,eAAc1C,SAC5CD,cAAA,KAAG2C,UAAU,iCAKrBzC,eAAA,SAAOyC,UAAU,kCAAiC1C,SAAA,CAChDD,cAAA,SAAO2C,UAAU,GAAE1C,SACjBC,eAAA,MAAAD,SAAA,CACED,cAAA,MAAAC,SAAI,YACJD,cAAA,MAAAC,SAAI,iBAEJD,cAAA,MAAAC,SAAI,uBACJD,cAAA,MAAAC,SAAI,aACJD,cAAA,MAAAC,SAAI,cACJD,cAAA,MAAAC,SAAI,WACJD,cAAA,MAAAC,SAAI,iBAGRD,cAAA,SAAAC,SACGoB,EACCQ,EAAqB6B,OAAS,EAC5B7B,EAAqB8B,KAAI,SAACT,EAAcU,GACtC,OACE1D,eAAA,MAAAD,SAAA,CACEC,eAAA,MAAAD,SAAA,CAAK2D,EAAQ,EAAE,OACf5D,cAAA,MAAAC,SAAKiD,EAAaC,OAElBnD,cAAA,MAAAC,SAAKiD,EAAaW,gBAClB7D,cAAA,MAAAC,SAAKY,IAAOqC,EAAapC,aAAaC,OAAO,mBAC7Cf,cAAA,MAAAC,SAAKY,IAAOqC,EAAalC,mBAAmBD,OAAO,mBACnDf,cAAA,MAAAC,SAA4B,KAAvBiD,EAAaY,SAAgB9D,cAAA,OAAK+D,MAAO,CAACC,MAAM,QAAQC,WAAW,QAAShE,SAAC,WAAeD,cAAA,OAAK+D,MAAO,CAACC,MAAM,MAAMC,WAAW,QAAQhE,SAAC,eAC9ID,cAAA,MAAAC,SAAID,cAAA,UAAQ2C,UAAU,yBAAyBuB,QAAW,YAtDlD,SAAC7E,GAChC6C,GAAa,GACbG,EAAWhD,EACZ,CAmDyF8E,CAAwBjB,EAAa,EAAEjD,SAACD,cAAA,KAAG2C,UAAU,0BAR/GiB,EAYb,IACG5D,cAAA,MAAAC,SAAID,cAAA,MAAIY,QAAQ,IAAImD,MAAO,CAAEK,UAAW,UAAWnE,SAAC,sBAEzDD,cAAA,OAAK2C,UAAU,cAAa1C,SAC1BD,cAAA,OAAK2C,UAAU,yBAY3B3C,cAAA,OAAAC,SACIC,eAACmE,IAAK,CAAC1B,UAAU,yBAAyB2B,OAAO,KAC7CC,KAAMtC,EACNuC,OAxEM,SAAC1B,GACnBZ,GAAa,EACf,EAsEkCjC,SAAA,CACpBD,cAACqE,IAAMI,OAAM,CAACC,aAAW,EAAC/B,UAAU,gBAAe1C,SAC/CC,eAAA,OAAAD,SAAA,CAAMD,cAAA,MAAAC,SAAI,0BAA0B,SAExCD,cAACqE,IAAMM,KAAI,CAAA1E,SACXD,cAACrB,EAAgB,CACfU,QAAWA,EACXuF,SAAW,aAQ7B,C","file":"static/js/6.936592b3.chunk.js","sourcesContent":["import React, { Component,useState, useRef, useCallback, useEffect, Fragment } from 'react'\r\nimport moment from 'moment';\r\nimport AxiosMaster from '../shared/AxiosMaster';\r\n\r\n\r\nconst ViewSubscription = (props) => {\r\n\r\n  const [subscriptionDetails, setSubscriptionDetails] = useState([]);\r\n\r\n  const getSubscriptionDetails = () => {\r\n    let subscriptionId = props.rowData.subscriptionId\r\n\r\n    AxiosMaster({\r\n      method: \"GET\",\r\n      url: `masterdata-management/subscription/${subscriptionId}`,    \r\n    })\r\n      .then(res => {\r\n        setSubscriptionDetails(res.data)\r\n      })\r\n      .catch(err => {\r\n        setSubscriptionDetails([])\r\n      });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getSubscriptionDetails(props)\r\n  },[])\r\n\r\n\r\n    return (\r\n      <div>\r\n          <table class=\"table table-striped table-hover\">\r\n            \r\n              <thead>\r\n              <tr>\r\n                <th>Item Name</th>\r\n                <th>Assigned</th>\r\n                <th>Available</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>Total Download Limit</td>\r\n                <td>{subscriptionDetails && subscriptionDetails.downloadLimit}</td>\r\n                <td>{props.rowData.downloadLimit}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Total Sub User</td>\r\n                <td>{subscriptionDetails && subscriptionDetails.subUserCount}</td>\r\n                <td>{props.rowData.subUserCount}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Total Workspace</td>\r\n                <td>{subscriptionDetails && subscriptionDetails.workspaceLimit}</td>\r\n                <td>{props.rowData.totalWorkspace}</td>\r\n              </tr>\r\n              {/*\r\n              <tr>\r\n                <td>Maximum Number of Records Per Workspace</td>\r\n                <td>{subscriptionDetails && subscriptionDetails.recordPerWorkspace}</td>\r\n                <td>{props.rowData.recordsPerWorkspace}</td>\r\n              </tr>\r\n               */}\r\n              <tr>\r\n                <td>Data Available Upto</td>\r\n                <td>{subscriptionDetails && subscriptionDetails.dataAccess}</td>\r\n                <td>{props.rowData.dataAccessInMonth}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Search Query Per Day</td>\r\n                <td>{subscriptionDetails && subscriptionDetails.searchQueryPerDay}</td>\r\n                <td>{props.rowData.queryPerDay}</td>\r\n              </tr>                    \r\n              <tr>\r\n                <td>Plan Create Date</td>                     \r\n                <td colSpan={2}>{moment(props.rowData.createdDate).format(\"DD-MM-YYYY\")}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Plan Expire Date</td>\r\n                <td colSpan={2}>{moment(props.rowData.accountExpireDate).format(\"DD-MM-YYYY\")}</td>\r\n              </tr>\r\n            </tbody>\r\n            \r\n          </table>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ViewSubscription\r\n","import React, { useEffect, useState } from 'react';\r\nimport AxiosUser from \"../shared/AxiosUser\";\r\nimport moment from 'moment';\r\nimport ViewSubscription from \"../components/ViewSubscription\"\r\nimport { Row, Col, Modal, Button, FormGroup } from 'react-bootstrap';\r\n\r\nexport default function Markets() {\r\n\r\n  const userId = localStorage.getItem(\"userToken\");\r\n\r\n  const [loading, isLoading] = useState(false);\r\n  const [subscriptionList, setSubscriptionList] = useState([]);\r\n  const [subscriptionListData, setSubscriptionListData] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [rowData, setRowData] = useState([]);\r\n\r\n\r\n  const getSubscriptionList = () => {\r\n\r\n    AxiosUser({\r\n      method: \"GET\",\r\n      url: `user-management/user-subscription/list?userId=${userId}`\r\n    })\r\n      .then(res => {\r\n        setSubscriptionList(res.data.userSubscriptionList);\r\n        setSubscriptionListData(res.data.userSubscriptionList);\r\n        isLoading(true);\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Err\", err);\r\n        isLoading(true);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSubscriptionList();\r\n  }, []);\r\n\r\n  const userSubscription = (text) => {\r\n    console.log(\"text\", text)\r\n    let subscriptionData = subscriptionList.filter((subscription) => subscription.name.toLowerCase().includes(text.toLowerCase()));\r\n    setSubscriptionListData(subscriptionData);\r\n  }\r\n\r\n  const UserSubscriptionDetails = (rowData) => {\r\n   setShowModal(true)\r\n   setRowData(rowData)    \r\n  }\r\n\r\n  const handleClose = (e) => {\r\n    setShowModal(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\">\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 list-page mt-3\">\r\n\r\n\r\n            <div className=\"search-ar mt-2 mb-2\">\r\n              <h2 className=\"headl\">Subscriptions</h2>\r\n              <div className=\"wrap float-right\">\r\n                <div className=\"search\">\r\n                  <input type=\"text\" onChange={(e) => { userSubscription(e.target.value) }} className=\"searchTerm\" placeholder=\"What are you looking for?\" />\r\n                  <button type=\"submit\" className=\"searchButton\">\r\n                    <i className=\"icon ion-md-search\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <table className=\"table table-striped table-hover\">\r\n              <thead className=\"\">\r\n                <tr>\r\n                  <th>Sl. No.</th>\r\n                  <th>Package Name</th>\r\n                  {/*<th>Price (in INR)</th>*/}\r\n                  <th>Validity (in Days)</th>\r\n                  <th>Added On</th>\r\n                  <th>Expire On</th>\r\n                  <th>Status</th>                  \r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {loading ? (\r\n                  subscriptionListData.length > 0 ? (\r\n                    subscriptionListData.map((subscription, index) => {\r\n                      return (\r\n                        <tr key={index}>\r\n                          <td>{index + 1}.</td>\r\n                          <td>{subscription.name}</td>\r\n                          {/*<td>{subscription.price}</td>*/}\r\n                          <td>{subscription.validityInDay}</td>\r\n                          <td>{moment(subscription.createdDate).format(\"MMM. DD, YYYY\")}</td>\r\n                          <td>{moment(subscription.accountExpireDate).format(\"MMM. DD, YYYY\")}</td>\r\n                          <td>{subscription.isActive=='Y' ? <div style={{color:\"green\",fontWeight:\"bold\",}}>ACTIVE</div> : <div style={{color:\"red\",fontWeight:\"bold\"}}>INACTIVE</div>}</td>\r\n                          <td><button className=\"btn btn-primary btn-sm\" onClick = {()=> { UserSubscriptionDetails(subscription)}}><i className=\"icon ion-md-eye\"></i></button></td>\r\n                        </tr>\r\n                      )\r\n\r\n                    })\r\n                  ) : (<tr><td colSpan=\"7\" style={{ textAlign: \"center\" }}>No record found</td></tr>)\r\n                ) : (\r\n                  <div className=\"loaderBlock\">\r\n                    <div className=\"loader\"></div>\r\n                  </div>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      \r\n        <div>\r\n            <Modal className=\"customModal brandModal\" bsSize=\"md\"\r\n                show={showModal}\r\n                onHide={handleClose}>\r\n                <Modal.Header closeButton className=\"custmModlHead\">\r\n                    <div ><h3>Subscription Details </h3> </div>\r\n                </Modal.Header>\r\n                <Modal.Body>                                           \r\n                <ViewSubscription \r\n                  rowData = {rowData}\r\n                  isAdmin = {false}\r\n                />                       \r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}